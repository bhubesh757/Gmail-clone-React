{"version":3,"sources":["features/userSlice.js","Gmail-clone/firebase.js","Gmail-clone/Header.js","Gmail-clone/SidebarOption.js","features/mailSlice.js","Gmail-clone/Sidebar.js","Gmail-clone/Mail.js","Gmail-clone/Section.js","Gmail-clone/EmailRow.js","Gmail-clone/EmailList.js","Gmail-clone/SendMail.js","Gmail-clone/Login.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["userSlice","createSlice","name","initialState","user","reducers","login","state","action","payload","logout","actions","selectUser","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","provider","GoogleAuthProvider","Header","useSelector","console","log","dispatch","useDispatch","signOut","className","IconButton","src","type","placeholder","Avatar","onClick","photoUrl","SidebarOption","title","number","Icon","selected","mailSlice","selectedMail","sendMessageIsOpen","selectMail","openSendMessage","closeSendMessage","selectOpenMail","mail","selectSendMessageIsOpen","Sidebar","Button","startIcon","fontSize","AllInboxIcon","StarIcon","WatchLaterIcon","SendIcon","DraftsIcon","ExpandMoreIcon","Mail","history","useHistory","push","UnfoldMore","PrintOutlined","subject","LabelImportant","time","description","Section","color","style","borderBottom","EmailRow","id","Checkbox","EmailList","useState","emails","setemails","useEffect","collection","orderBy","onSnapshot","snapshot","docs","map","doc","data","InboxIcon","PeopleIcon","LocalOfferIcon","message","timestamp","Recipients","Date","seconds","toUTCString","SendMail","useForm","register","handleSubmit","errors","watch","onSubmit","formData","add","FieldValue","serverTimestamp","ref","required","Login","variant","signInWithPopup","then","displayName","email","photoURL","catch","error","alert","App","onAuthStateChanged","path","configureStore","reducer","mailReducer","userReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4c277dcc.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState: {\n   user : null\n  },\n  reducers: {\n    login: (state ,action ) => {\n\n      state.user = action.payload;\n    },\n    logout: (state) => {\n      state.user = null ;\n    },\n  },\n});\n\nexport const { login, logout } = userSlice.actions;\n\n// Selectors\nexport const selectUser = (state) => state.user.user;;\n\nexport default userSlice.reducer;","// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nimport firebase from 'firebase'\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyAV58EchvQd8fuvlEcKZvlWyTKSTGLoobk\",\n    authDomain: \"yt-9ec8d.firebaseapp.com\",\n    projectId: \"yt-9ec8d\",\n    storageBucket: \"yt-9ec8d.appspot.com\",\n    messagingSenderId: \"748659610600\",\n    appId: \"1:748659610600:web:c6fd43fc50240cab6eca5d\",\n    measurementId: \"G-6Q879RL51V\"\n  };\n\n\n  const firebaseApp = firebase.initializeApp(firebaseConfig);\n\n  const db = firebaseApp.firestore();\n  const auth = firebase.auth();\n \n  const provider = new firebase.auth.GoogleAuthProvider();\n  \n  export {db , auth , provider };\n\n  export default firebase\n\n\n","import React from 'react'\n\nimport './Header.css'\n// icons\n\nimport ListIcon from '@material-ui/icons/List';\nimport { Avatar, IconButton } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\n// header right\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport AppsIcon from '@material-ui/icons/Apps';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logout, selectUser } from '../features/userSlice';\nimport { auth } from './firebase';\n// import { useDispatch } from 'react-redux';\nfunction Header() {\n\n    // importing the image from the google\n    const user = useSelector(selectUser)\n    console.log(user);\n\n    const dispatch = useDispatch()\n\n    console.log('dispatch ', dispatch);\n\n\n    // signout\n\n    const signOut = () => {\n        dispatch(logout());\n        auth.signOut()\n    }\n\n    console.log('signout' , signOut);\n    \n    return (\n        <div className = 'header'>\n            <div className=\"header__left\">\n                <IconButton>\n                <ListIcon></ListIcon>\n                </IconButton>\n                {/* image */}\n                <img src = 'https://ssl.gstatic.com/ui/v1/icons/mail/rfr/logo_gmail_lockup_default_1x_r2.png'>\n                </img>\n            </div>\n\n            <div className=\"header__middle\">\n            <SearchIcon></SearchIcon>\n                <input type = 'text' className = 'header__middleText' placeholder = 'Search mail' >\n                </input>\n                <KeyboardArrowDownIcon className = 'header__middleArrow'></KeyboardArrowDownIcon>\n            </div>\n\n            <div className=\"header__right\">\n                <IconButton>\n                    <SettingsIcon></SettingsIcon>\n                </IconButton>\n                <IconButton>\n                    <AppsIcon></AppsIcon>\n                </IconButton>\n                <IconButton>\n                        <Avatar onClick = {signOut} src = {user?.photoUrl} ></Avatar>\n                </IconButton>\n            </div>\n        </div>\n    )\n}\n\nexport default Header\n","import React from 'react'\n\nimport './SidebarOption.css' \nfunction SidebarOption( {title , number , Icon , selected}) {\n    return (\n        <div className = {`sidebarOption ${selected && 'sidebarOption--active '} `}>\n                <Icon></Icon>\n                <h3>{title}</h3>\n                <p>{number}</p>\n        </div>\n    )\n}\n\nexport default SidebarOption\n ","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const mailSlice = createSlice({\r\n  name: 'mail',\r\n  initialState: {\r\n    selectedMail: null,\r\n    sendMessageIsOpen: false\r\n  },\r\n  reducers: {\r\n    selectMail: (state, action) => {\r\n      state.selectedMail = action.payload;\r\n    },\r\n    openSendMessage: state => {\r\n      state.sendMessageIsOpen = true;\r\n    },\r\n    closeSendMessage: state => {\r\n      state.sendMessageIsOpen = false;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { selectMail ,  openSendMessage, closeSendMessage } = mailSlice.actions;\r\nexport const selectOpenMail = (state) => state.mail.selectedMail;\r\nexport const selectSendMessageIsOpen = state => state.mail.sendMessageIsOpen;\r\n\r\nexport default mailSlice.reducer;","import { Button } from '@material-ui/core'\nimport React from 'react'\n\n// icons\nimport AddIcon from '@material-ui/icons/Add';\n\nimport {IconButton} from '@material-ui/core'\n\n// sidebarOption\nimport AllInboxIcon from '@material-ui/icons/AllInbox';\nimport StarIcon from '@material-ui/icons/Star';\nimport WatchLaterIcon from '@material-ui/icons/WatchLater';\nimport SendIcon from '@material-ui/icons/Send';\nimport DraftsIcon from '@material-ui/icons/Drafts';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\n// header Footer\nimport VideocamIcon from '@material-ui/icons/Videocam';\nimport PhoneIcon from '@material-ui/icons/Phone';\nimport PersonIcon from '@material-ui/icons/Person';\n\nimport './Sidebar.css'\nimport SidebarOption from './SidebarOption';\nimport { useDispatch } from 'react-redux';\nimport { openSendMessage } from '../features/mailSlice';\nfunction Sidebar() {\n\n    // using the dispatch by redux\n\n    const dispatch = useDispatch()\n\n\n    return (\n        <div className = 'sidebar'>\n            {/* <h2>Hi I am Sidebar</h2> */}\n\n             <Button\n             startIcon={<AddIcon fontSize=\"large\" />}\n             className=\"sidebar__compose\"\n             onClick={()=>dispatch(openSendMessage())}\n            >\n                Compose\n            </Button>\n\n            <SidebarOption Icon = {AllInboxIcon}  title = 'Inbox' number = '10' selected = {true}></SidebarOption>\n            <SidebarOption Icon = {StarIcon}  title = 'Starred' number = '10'></SidebarOption>\n            <SidebarOption Icon = {WatchLaterIcon}  title = 'snoozed' number = '10'></SidebarOption>\n            <SidebarOption Icon = {SendIcon}  title = 'Sent' number = '10'></SidebarOption>\n            <SidebarOption Icon = {DraftsIcon}  title = 'Drafts' number = '10'></SidebarOption>\n            <SidebarOption Icon = {ExpandMoreIcon}  title = 'More' ></SidebarOption>\n\n            <div className=\"sidebar__footer\">\n                <div className=\"sidebar__footerIcons\">\n                        <IconButton>\n                            <VideocamIcon fontSize = 'small' ></VideocamIcon>\n                        </IconButton>\n                        <IconButton>\n                            <PhoneIcon fontSize = 'small'></PhoneIcon>\n                        </IconButton>\n                        <IconButton>\n                            <PersonIcon fontSize = 'small' ></PersonIcon>\n                        </IconButton>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Sidebar\n","import React, { useState } from 'react'\n\nimport './Mail.css'\n\n// Icons\n\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport ArchiveIcon from '@material-ui/icons/Archive';\nimport InfoIcon from '@material-ui/icons/Info';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport MarkunreadIcon from '@material-ui/icons/Markunread';\nimport SnoozeIcon from '@material-ui/icons/Snooze';\nimport MoveToInboxIcon from '@material-ui/icons/MoveToInbox';\nimport LabelIcon from '@material-ui/icons/Label';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport { IconButton } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\n\n// Right\n\nimport { LabelImportant, PrintOutlined, UnfoldMore } from '@material-ui/icons';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\n\nimport FlipMove from 'react-flip-move';\nimport { useSelector } from 'react-redux';\nimport { selectOpenMail } from '../features/mailSlice';\nfunction Mail() {\n\n    // \n\n    const selectedMail = useSelector(selectOpenMail)\n\n    // history\n    const history = useHistory()\n    return (\n        <div className = 'mail'>\n            {/* <h1>Boom! Its working ! using the history </h1> */}\n            <div className=\"mail__tools\">\n                <div className=\"mail__toolsLeft\">\n                    <IconButton onClick = {() => history.push('/')} >\n                        <ArrowBackIcon></ArrowBackIcon>\n                    </IconButton>\n                    <IconButton>\n                        <ArchiveIcon></ArchiveIcon>\n                    </IconButton>\n                    <IconButton>\n                        <InfoIcon></InfoIcon>\n                    </IconButton>\n                    <IconButton>\n                        <DeleteIcon></DeleteIcon>\n                    </IconButton>\n                    <IconButton>\n                        <MarkunreadIcon></MarkunreadIcon>\n                    </IconButton>\n                    <IconButton>\n                        <SnoozeIcon></SnoozeIcon>\n                    </IconButton>\n                    <IconButton>\n                        <MoveToInboxIcon></MoveToInboxIcon>\n                    </IconButton>\n                    <IconButton>\n                        <LabelIcon></LabelIcon>\n                    </IconButton>\n                    <IconButton>\n                        <MoreVertIcon></MoreVertIcon>\n                    </IconButton>\n                </div>\n                <div className=\"mail__toolsRight\">\n              <IconButton>\n                  <UnfoldMore></UnfoldMore>\n              </IconButton>\n              <IconButton>\n                    <PrintOutlined></PrintOutlined>\n              </IconButton>\n              <IconButton>\n                <ExitToAppIcon></ExitToAppIcon>\n              </IconButton>\n                </div>\n                </div>\n                <FlipMove>\n\n                <div className=\"mail__body\">\n                    <div className=\"mail_bodyHeader\">\n                        <h2>{selectedMail?.subject}</h2>\n                        <LabelImportant className = 'mail__important'></LabelImportant>\n                        <p>{selectedMail?.title}</p>\n                        <p className = 'mail__time'>{selectedMail?.time}</p>\n                    </div>\n                    <div className=\"mail__message\">\n    <p>{selectedMail?.description}</p>\n                    </div>\n            </div>\n                </FlipMove>\n        </div>\n    )\n}\n\nexport default Mail\n","import React from 'react'\n\nimport './Section.css'\nfunction Section({Icon , title , color , selected}) {\n    return (\n        <div className = {`section ${selected && 'section--selected '} `}\n        style = {{\n            borderBottom: `3px solid ${color}`,\n            color : `${selected && color}`\n        }}>\n\n            <Icon></Icon>\n            <h4>{title}</h4>\n            \n        </div>\n    )\n}\n\nexport default Section\n","import { Checkbox, IconButton } from '@material-ui/core'\nimport React from 'react'\n\nimport './EmailRow.css'\n\n// icons\n\nimport StarOutlineIcon from '@material-ui/icons/StarOutline';\nimport LabelImportantIcon from '@material-ui/icons/LabelImportant';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { selectMail } from '../features/mailSlice';\nfunction EmailRow({title , subject , description , time , id}) {\n\n    // history\n    const history = useHistory() //we can push the webpage\n\n    // dispatch\n\n    const dispatch = useDispatch();\n\n    const openMail = () => {\n        dispatch(selectMail({\n                id , title , subject , description , time \n        })\n        \n        )\n\n        history.push('/mail')\n    };\n\n    \n\n\n    return (\n        <div onClick = {openMail} className = 'emailRow'>\n                {/* <h1> Boom i am Email Row</h1> */}\n\n               <div className=\"emailRow__options\">\n               <Checkbox></Checkbox>\n               <IconButton>\n                   <StarOutlineIcon></StarOutlineIcon>\n               </IconButton>\n               <IconButton>\n                    <LabelImportantIcon></LabelImportantIcon>\n               </IconButton>\n               </div>\n\n               <div className=\"emailRow__title\">\n                   <h3>\n                       {title}\n                   </h3>\n               </div>\n               <div className=\"emailRow__message\">\n                    <h4>{subject}\n                    <span className = 'emailRow__description'>\n                    {description}\n                    </span>\n                     </h4>\n               </div>\n               <p className = 'emailRow__time'>{time}</p>\n        </div>\n    )\n}\n\nexport default EmailRow\n","import { Checkbox  } from '@material-ui/core'\nimport React, { useEffect, useState } from 'react'\n\n\n// icons\n\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport { IconButton } from '@material-ui/core';\n// right\n\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport KeyboardIcon from '@material-ui/icons/Keyboard';\nimport SettingsIcon from '@material-ui/icons/Settings';\n\n// section \nimport InboxIcon from '@material-ui/icons/Inbox';\nimport PeopleIcon from '@material-ui/icons/People';\nimport LocalOfferIcon from '@material-ui/icons/LocalOffer';\nimport './EmailList.css'\nimport Section from './Section';\nimport EmailRow from './EmailRow';\nimport { db } from './firebase';\n\n// Flipmove\n\nimport FlipMove from 'react-flip-move';\nfunction EmailList() {\n\n    const [emails, setemails] = useState([])\n\n    useEffect(() => {\n        db.collection('emails').orderBy('timestamp' , 'desc').\n        onSnapshot(\n            snapshot => setemails (snapshot.docs.map(doc => ({\n                id : doc.id,\n                data : doc.data()\n            })))\n        )\n    }, [])\n\n    return (\n        <div className = 'emailList'>\n            {/* <h1> I am Email List</h1> */}\n            <div className=\"emailList__settings\">\n                <div className=\"emailList__settingsLeft\">\n                    <Checkbox></Checkbox>\n                    <IconButton>\n                        <ExpandMoreIcon></ExpandMoreIcon>\n                    </IconButton>\n                    <IconButton>\n                        <RefreshIcon></RefreshIcon>\n                    </IconButton>\n                    <IconButton>\n                        <MoreVertIcon></MoreVertIcon>\n                    </IconButton>\n                </div>\n\n                <div className=\"emailList__settingsRight\">\n                    <IconButton>\n                        <ChevronLeftIcon></ChevronLeftIcon>\n                    </IconButton>\n                    <IconButton>\n                        <ChevronRightIcon></ChevronRightIcon>\n                    </IconButton>\n                    <IconButton>\n                        <KeyboardIcon></KeyboardIcon>\n                    </IconButton>\n                    <IconButton>\n                        <SettingsIcon></SettingsIcon>\n                    </IconButton>\n                </div>\n            </div>\n            <div className=\"emailList__section\">\n                <Section color = 'red' selected Icon = {InboxIcon} title = 'Primary'></Section>\n                <Section color = '#1A73EB' Icon = {PeopleIcon} title = 'Social'></Section>\n                <Section color = 'green' Icon = {LocalOfferIcon} title = 'Promotion'></Section>\n            </div>\n\n            \n            <FlipMove>\n            <div className=\"emailList__mailList\">\n            \n\n                {emails.map(({id , data : {\n                    subject , message , timestamp , Recipients\n                }}) => (\n                    <EmailRow\n                    id = {id}\n                    key = {id}\n                    title = {Recipients}\n                    subject = {subject}\n                    description = {message}\n                    time = {new Date (timestamp?.seconds * 1000 ).toUTCString()}\n                    ></EmailRow>\n                ))}\n            \n                  {/* <EmailRow\n                  title = 'The Postman Team'\n                  subject = 'Hackathon Alert: Announcing the Postman API Hack '\n                  description = 'Hack the Future of APIs and Unleash What You Can Do'\n                  time = '5:54'>\n                  </EmailRow>\n                  <EmailRow\n                  title = 'The Postman Team'\n                  subject = 'Hackathon Alert: Announcing the Postman API Hack '\n                  description = 'Hack the Future of APIs and Unleash What You Can Do'\n                  time = '5:54'>\n                  </EmailRow> */}\n            </div>\n            </FlipMove>\n        </div>\n    )\n}\n\nexport default EmailList\n","import React from 'react'\n\nimport './SendMail.css'\n// Icons \n\nimport CloseIcon from '@material-ui/icons/Close';\nimport { Button } from '@material-ui/core';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch } from 'react-redux';\nimport { closeSendMessage } from '../features/mailSlice';\nimport { db } from './firebase';\nimport firebase from './firebase'\n\nfunction SendMail() {\n\n    // useforms\n\n    const {register , handleSubmit , watch , errors} = useForm();\n\n    // handlesubmit\n\n    const onSubmit = (formData) => {\n\n            db.collection('emails').add({\n                Recipients :formData.Recipients,\n                subject : formData.subject,\n                message : formData.message,\n                timestamp : firebase.firestore.FieldValue.serverTimestamp(),\n            })\n\n            dispatch (closeSendMessage())\n    }\n\n    // mailSlice\n\n    const dispatch = useDispatch()\n    return (\n        <div className = 'sendMail'>\n            <div className=\"sendmail__Header\">\n                <h3>New Message</h3>\n                <CloseIcon onClick={() => dispatch(closeSendMessage()) } className = 'sendMail__close'></CloseIcon>\n            </div>\n\n            <form onSubmit = {handleSubmit(onSubmit)}>\n                <input type = 'email' ref = {register({required : true})} name = 'Recipients' placeholder = 'Recipients' type = 'text'></input>\n                {errors.Recipients && \n                <p className  = 'sendMail__error'> Recipients is Required\n                </p>\n                }\n                <input ref = {register({required : true})} name = 'subject'  placeholder = 'Subject' type = 'text'></input>\n                {errors.subject &&  <p className  = 'sendMail__error'> Subject is Required!!</p>}\n                <input ref = {register({required : true})} name = 'message' placeholder = 'message' className = 'sendMail__Message' type = 'text'></input>\n                {errors.message &&  <p className  = 'sendMail__error' > Message is Required!!</p>}\n                \n\n                <div className=\"sendMail__options\">\n                    <Button type = 'submit' className = 'sendMail__button'>Send</Button>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport default SendMail\n","import { Button } from '@material-ui/core'\nimport React from 'react'\n\n\nimport './Login.css'\n\nimport {auth , provider } from './firebase'\nimport { login } from '../features/userSlice'\nimport { useDispatch } from 'react-redux'\nfunction Login() {\n\n    const dispatch = useDispatch();\n\n    const signIn = () => {\n            auth.signInWithPopup(provider)\n            .then(({user}) => {\n                dispatch(login({\n                    displayName : user.displayName,\n                    email : user.email,\n                    photoUrl : user.photoURL,\n\n                }))\n            })\n            .catch((error) => alert(error.message))\n    }\n    return (\n        <div className = 'login'>\n                {/* <h1>Hello I am Login page</h1> */}\n                <div className=\"login__container\">\n                    <img src = 'https://static.dezeen.com/uploads/2020/10/gmail-google-logo-rebrand-workspace-design_dezeen_2364_col_0.jpg'></img>\n                </div>\n\n                <Button variant = 'contained' color = 'primary'  type = 'submit' onClick = {signIn}> Login </Button>\n        </div>\n    )\n}\n\nexport default Login\n","import React, { useEffect } from 'react';\r\n// import logo from './logo.svg';\r\n// import { Counter } from './features/counter/Counter';\r\nimport './App.css';\r\nimport Header from './Gmail-clone/Header';\r\nimport Sidebar from './Gmail-clone/Sidebar';\r\n\r\n// react router dom\r\nimport {BrowserRouter as Router , Switch , Route} from 'react-router-dom'\r\nimport Mail from './Gmail-clone/Mail';\r\nimport EmailList from './Gmail-clone/EmailList';\r\nimport SendMail from './Gmail-clone/SendMail';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { selectSendMessageIsOpen } from './features/mailSlice';\r\nimport { login, selectUser } from './features/userSlice';\r\nimport Login from './Gmail-clone/Login';\r\nimport { auth } from './Gmail-clone/firebase';\r\n\r\nfunction App() {\r\n// mailSlice // react redux\r\nconst sendMessageIsOpen = useSelector(selectSendMessageIsOpen);\r\n\r\n  // const sendMessageIsOpen = useSelector(state => state.selectSendMessageIsOpen)\r\n  const dispatch = useDispatch();\r\n\r\n  const user = useSelector(selectUser)\r\n\r\n\r\n   useEffect (() => {\r\n     auth.onAuthStateChanged(user => {\r\n       if (user) {\r\n          // logged in\r\n\r\n          dispatch(login({\r\n                    displayName : user.displayName,\r\n                    email : user.email,\r\n                    photoUrl : user.photoURL,\r\n          }))\r\n       }\r\n       else {\r\n\r\n       }\r\n     })\r\n   }, [])\r\n  \r\n  return ( \r\n\r\n    <Router>\r\n\r\n      {\r\n        !user ?(\r\n          <Login></Login>\r\n        ): (\r\n\r\n    <div className=\"app\">\r\n      {/* <h1>Gmail Clone React Redux</h1> */}\r\n\r\n      {/* header */}\r\n      <Header></Header>\r\n      {/* sidebar */}\r\n      <div className=\"app_body\">\r\n\r\n      <Sidebar></Sidebar>\r\n      <Switch>\r\n          <Route path  = '/mail'>\r\n            <Mail></Mail>\r\n          </Route>\r\n\r\n          <Route path = '/'>\r\n            <EmailList></EmailList>\r\n          </Route>\r\n      </Switch>\r\n      </div>\r\n\r\n      {/* Mail */}\r\n\r\n      {sendMessageIsOpen && <SendMail />}\r\n\r\n    </div>\r\n        )\r\n      }\r\n\r\n    </Router>\r\n    \r\n  );\r\n  \r\n}\r\n\r\n\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport mailReducer from '../features/mailSlice';\r\nimport userReducer from '../features/userSlice';\r\n\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    mail: mailReducer ,\r\n    user :  userReducer,\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}